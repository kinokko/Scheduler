@model IEnumerable<Scheduler.Areas.Schedule.Models.EventListMonthViewModel>

<h2></h2>

@{ 
    int displayYear = ViewBag.Year;
    int displayMonth = ViewBag.Month;
}

<div class="container">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th colspan="8" class="text-center" id="table-year">
                    @displayYear
                </th>
            </tr>
            <tr>
                <th colspan="8" class="text-center" id="table-month">
                    @System.Globalization.CultureInfo.GetCultureInfo("en").DateTimeFormat.GetMonthName(displayMonth)
                </th>
            </tr>
            <tr>
                <th>
                </th>
                @foreach (string weekName in Enum.GetNames(typeof(DayOfWeek)))
                {
                    <th class="text-center">@weekName</th>
                }
            </tr>
        </thead>
        <tbody>
            @*@{ int rowCounter = 0; }
            <tr>
                <td></td>
                @for (int day = 1; day <= DateTime.DaysInMonth(displayYear, displayMonth) && rowCounter < 7; day++)
                {
                    DateTime tempDate = new DateTime(displayYear, displayMonth, day);

                    // Add space before day 1
                    if (day == 1)
                    {
                        for (int counter = 0; counter < ((int)tempDate.DayOfWeek); counter++)
                        {
                            <td></td>
                            rowCounter++;
                        }
                    }

                    <td>@day</td>
                    rowCounter++;
                }
            </tr>*@
            @{ int day = 1;}
            @while (day <= DateTime.DaysInMonth(displayYear, displayMonth))
            {
                <tr>
                    <td></td>
                    @for (int rowCounter = 0; rowCounter < 7; rowCounter++)
                    {
                        // Add space before day 1
                        if (day == 1 && rowCounter < ((int)new DateTime(displayYear, displayMonth, day).DayOfWeek))
                        {
                            <td></td>
                        }
                        else
                        {
                            if (day > DateTime.DaysInMonth(displayYear, displayMonth))
                            {
                                <td></td>
                            }
                            else
                            {
                                <td>@day</td>
                            }
                            day++;
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
</div>



